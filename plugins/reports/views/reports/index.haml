= render 'shared/project_tabs_and_title', :project => @project, :shared_project => @shared_project

%h1= t('views.plugins.reports.reports')
%p.desc= t('views.plugins.reports.reports')

.ux-collapsible.collapsed.w40.import_csv{"data-on-expanded" => "box grey"}
  %span
    %a.button.fimport{:href => "#"} Import CSV
  .ux-content
    %span
      The CSV file must be comma-separated and have a header row. After uploading the file, you will be able to choose how each column will be imported.
    = form_tag project_reports_upload_excel_path(@project), enctype: "multipart/form-data" do
      %input#choose-file{:disabled => "disabled", :placeholder => "Choose File"}/
      .file-upload
        %a.button.farrow.choose-button{href: '#'} Choose a file
        = file_field_tag 'file', class: 'choose'
        %a.button.white.import Import
  
%br/
%br/

- if @reports.present?
  #call_logs.tablewrapp.no-wrap.scroll
    %table.GralTable.ButtonTable.w-pagination
      %tr
        %th= t('views.projects.call_logs.index.label.Call ID')
        %th= t('views.projects.call_logs.index.label.Symptoms')
        %th= t('views.projects.call_logs.index.label.Location')
        - @project.project_variables.each do |variable|
          %th= variable.try(:name)
        %th
      - @reports.each do |rp|
        %tr
          %td= rp.id
          %td= rp.properties
          %td= rp.location
          - recorded_audios = rp.call_log.call_log_recorded_audios

          - @project.project_variables.each do |variable|
            - existed = false
            - rp.call_log.call_log_answers.each do |answer|
              - if answer.project_variable.try(:id) == variable.id
                - if recorded_audios.where(project_variable_id: variable.id).count == 0
                  - existed = true
                  %td= answer.try(:value)
                  - break
            - rp.call_log.call_log_recorded_audios.each do |recorded_audio|
              - if recorded_audio.project_variable_id == variable.id
                - existed = true
                %td{ id: "audio_#{recorded_audio.id}" }
                  .audio-annotation
                    .modal{ id: "audio_annotation_#{recorded_audio.id}" }
                      %h2= t('views.call_logs.index.label.annotation')
                      %audio.recorded-audio{ controls: "", data: { audio_id: recorded_audio.id } }
                        %source{ src: result_project_call_log_path(@project.id, recorded_audio.call_log, { key: recorded_audio.key }) + ".wav", type: "audio/wav" }
                          Your browser does not support the audio element.
                      %br/
                      %textarea{ rows: 5, data: { annotation: recorded_audio.annotation } }= recorded_audio.annotation
                      %br/
                      %button.white.save-annotation= t('views.form.save')
                      %a.cancel-edit-annotation{ href: "Javascript:void(0);" }= t('views.form.close')
                  .div_content_variable
                    .div_left
                      %a.fplay.audio-control{ href: "Javascript:void(0);" }
                    .div_right
                      %a.fimport{ href: result_project_call_log_path(@project.id, recorded_audio.call_log, {:key => recorded_audio.key}) }
                      %a.fancybox.icon_button{ class: recorded_audio.annotation.present? ? "fedit-blue" : "fedit", href: "#audio_annotation_#{recorded_audio.id}", data: { audio_id: recorded_audio.id } }
            - unless existed
              %td
          %td= link_to(t('views.projects.call_logs.index.action.view_details'), call_log_path(rp, project_id: @project.id)) if rp.call_log.store_log_entries

      / = paginate @reports

