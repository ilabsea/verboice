= render 'shared/project_tabs_and_title', :project => @project, :shared_project => @shared_project
:javascript
  $(function(){
    allowKeyInput($("#search"), /[0-9\+]/);
  });


%h2= t('views.contacts.index.title')
%p.desc= t('views.contacts.index.desc')

.ux-collapsible.collapsed.w40.file_upload{"data-on-expanded" => "box grey"}
  %span
    - if project_admin?
      %a.button.fconfiguration{:href => "#"}= t('views.contacts.index.action.manage_phone_book_columns')
  .ux-content
    = form_for(@project, :url => update_variables_project_path(@project)) do |f|
      %hr
      %ul.oplist
        = f.fields_for :project_variables do |builder|
          = render 'project_variable_fields', :f => builder
        .add_project_variable
          .ux-optext{class: 'w30', style: 'display: inline-block;'}
            = t('views.contacts.index.label.add_new_variable')
          = link_to_add_fields '', f, :project_variables, :class => 'button clist-add'
      %hr
      .right
        %button.white{:type => "submit"}= t('views.contacts.index.action.confirm')
        %a.button.white.cancel.ux-collapse-trigger= t('views.contacts.index.action.cancel')
      .clear

%a.button.fimport{:href => project_contacts_path(@project, format: :csv)} Download Phone Book as CSV

%br
%br

- if project_admin?
  = link_to 'New Contact', new_project_contact_path(@project), :class => 'cadd'

.contacts-list
  #contactsFilter.filters-box.w30.tablewrapp
    .search
      = form_tag search_project_contacts_path(@project) do
        %p= "Filters (#{pluralize(@contacts.count, 'entry')} found)"
        %hr
        = hidden_field_tag :filters_json, params[:filters_json] || '[]', 'data-bind' => 'value: json', 'class' => 'filters'
        = render 'shared/contacts_filter'
        %button.fsearch Search

    .create-scheduled-call
      %hr
      = form_tag from_filter_project_scheduled_calls_path(@project) do
        = hidden_field_tag :filters_json, params[:filters_json] || '[]', 'data-bind' => 'value: json'
        %button.fedit Create a scheduled call from these filters

  .tablewrapp.no-wrap.scroll.contacts-table
    %table.GralTable
      %tr
        %th{colspan: 2} Phone numbers
        - @implicit_variables.each do |variable|
          %th=variable.key
        - @project_variables.each do |variable|
          %th=variable.name
        - @recorded_audio_descriptions.each do |audio_description|
          %th=audio_description

      - @contacts.each do |contact|
        - link_opts = project_admin? ? {'data-url' => edit_project_contact_path(@project, contact), 'class' => 'link'} : {}
        %tr{link_opts}
          %td= addresses_for_contact(contact)
          %td.right
            - if project_admin?
              = link_to '', project_contact_path(@project, contact), :confirm => 'Are you sure?', :method => :delete, :class => 'button premove'
          - @implicit_variables.each do |implicit_variable|
            - variable = contact.persisted_variables.detect{|v| v.implicit_key == implicit_variable.key}
            %td= variable.try(:value)
          - @project_variables.each do |project_variable|
            - variable = contact.persisted_variables.detect do |variable|
              - variable.project_variable == project_variable
            %td= variable.try(:value)
          - @recorded_audio_descriptions.each do |audio_description|
            - audios = contact.recorded_audios.collect do |audio|
              - audio.description == audio_description
            %td= audios.size

%br.clear

:javascript
  window.variables = #{@project_variables.to_json};
  initContactsFilter()
