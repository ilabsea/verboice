- if params[:call_flow_id] == call_flow.id.to_s
  - call_flow.fusion_table_name = params[:fusion_table_name] if params[:fusion_table_name].present?
  - call_flow.store_in_fusion_tables = true
= form_for [call_flow.project, call_flow], :remote => true do |f|
  .field
    = f.label :name, t('views.call_flows._form.label.name')
    = f.text_field :name, :class => "w30"
  .field
    = f.label :mode
    %p.desc= t('views.call_flows._form.label.choose_external_app_or_build_on_verboice')
    .call_flow_mode
      = f.select :mode, options_for_select([[t('views.call_flows._form.label.use_external_application'), :callback_url], [ t('views.call_flows._form.label.design_app_in_verboice'), :flow]], call_flow.mode), {}, :class => "w30"
      = link_to t('views.call_flows._form.action.go_to_designer'), edit_workflow_project_call_flow_path(project, call_flow), :class => 'button farrow flow_settings flow_settings' unless call_flow.new_record?
    .flow_settings
      = link_to t('views.call_flows._form.action.download_call_result_as_csv'), download_results_project_call_flow_path(@project, call_flow, :format => :csv), :class => "button fimport" unless call_flow.new_record? || call_flow.user_flow.nil?

  .callback_url_settings
    = f.label :callback_url, t('views.call_flows._form.label.url')
    %br/
    = f.text_field :callback_url, :class => "w30"
    %br/
    = f.label :callback_url_user, t('views.call_flows._form.label.user')
    %br/
    = f.text_field :callback_url_user, :class => "w30"
    %br/
    = f.label :callback_url_password, t('views.call_flows._form.label.password')
    %br/
    = f.password_field :callback_url_password, :class => "w30", autocomplete: 'new-password', value: call_flow.callback_url_password

  %hr
  - if call_flow.new_record?
    %button.white{:type => "submit"}= t('views.call_flows._form.action.save')
  - else
    %button.white{:type => "submit"}= t('views.call_flows._form.action.update')
  = link_to t('views.call_flows._form.action.cancel'), '#', :class => "button white cancel #{call_flow.new_record? ? 'remove_unsaved_element' : 'collapse_trigger'}", :style => 'top: 1px;'
