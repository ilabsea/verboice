%script{type: "text/html", id: "transfer_step_template"}
  .feditor-sidebar.right.box.w28.iblock.h65
    .tableheader
      %span.left.i48grad-callback{ ko(css: '{ "orange": is_invalid }') }
      %input.ux-text.w20.right{ ko(value: 'name', valueUpdate: '"afterkeydown"', css: '{ "error": is_name_invalid }')}

    .content
      %label= t('views.call_flows._transfer_step_template.label.forward_to')
      %br

      %span.forwardto{ko(css: "{ orange: is_address_invalid }")}
        = t('views.call_flows._transfer_step_template.label.phone_number')
        %span{ko(css: "{ alert: is_address_invalid }")}
      %input.ux-text.w20{ 'data-bind' => 'value: address, valueUpdate: "afterkeydown"' }
      %br

      %span.forwardto
        = t('views.call_flows._transfer_step_template.label.channel')
      %select{ko(value: 'channel')}
        %option{:value => nil}= t('views.call_flows._transfer_step_template.label.use_current_channel')
        = options_from_collection_for_select(current_account.channels, 'name', 'name')
      %br

      .content{ko('instedd_init' => true)}
        .transfer_successful_after
          %hr

          %input{id: 'successful_after_check', type: 'checkbox', 'data-bind' => 'checked: successful_after_check'}
          %label{for: 'successful_after_check'}
            Mark call as successful after caller was connected for:
          .block
            %input{type: 'text', 'data-bind' => 'value: successful_after_input, valueUpdate: "afterkeydown", enable: successful_after_check'}
          .examples.block
            Examples:
            %ul
              %li 10 seconds
              %li 2 minutes
              %li 1 hour
      .content
        %hr
        %input{ type: 'checkbox', 'data-bind' => 'checked: record_call, attr: { id: ("record_call_" + id) }' }
        %label{ title: 'When checked, the forwarded call will be recorded.', 'data-bind' => 'attr: { for: ("record_call_" + id) }'} Record call
        %br

      .bottom-actions
        %button.fdelete{ 'data-bind' => 'click: remove_with_confirm' }= t('views.call_flows._transfer_step_template.action.remove_this_step')
